{"version":3,"file":"static/js/696.9952e635.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","views/ContactsView.js","views/view.styled.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form` \n  width: 320px;\n  margin: 0 auto; \n`;\n\nexport const Field = styled.label`\n  display: flex;  \n  width: 100%;\n  margin-bottom: 15px;\n`;\n\nexport const Icon = styled.div`\n  padding: 10px;\n  background: #45c01f;\n  color: #ffffff;\n  min-width: 50px;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  outline: none;\n  border-radius: 5px;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :focus-within {\n    border: 2px solid #2b9c08; \n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nexport const Button = styled.button`\n  background: #2b9c08;\n  font-weight: 700;\n  font-size: 20px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  color: #ffffff;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 100%;\n  opacity: 0.8;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    opacity: 1;\n  }\n`;","import { useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { useCreateContactMutation, useFetchContactsQuery} from 'redux/contactsAPI';\nimport { Spinner } from 'components/Spinner';\nimport { FaUser, FaPhoneAlt, FaPlus } from 'react-icons/fa';\nimport { Form, Field, Icon, Input, Wrapper, Button } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n    const [addNewContact, { isLoading }] = useCreateContactMutation();\n    const { data: contacts } = useFetchContactsQuery();\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const handleNameChange = e => {\n        setName(e.target.value);\n    };\n\n    const handleNumberChange = e => {\n        setNumber(e.target.value);\n    };\n\n    const formReset = () => {\n        setName('');\n        setNumber('');\n    }\n    \n    const addContact = (name, number) => {\n        const normalizedName = name.toLowerCase();\n\n        if (contacts && contacts.find(contact =>\n            contact.name.toLowerCase() === normalizedName)) {\n            toast.error(`${name} is already in contacts`);\n            return;\n        };\n        \n        toast.success('Contact added!');\n            \n        return addNewContact({ name, number });\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        addContact(name, number);\n        formReset();\n    }\n    \n    return (\n        <Form onSubmit={handleSubmit} autoComplete=\"off\">\n            <Field>\n                <Icon><FaUser size={ 22}/></Icon>\n                <Input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    value={name}\n                    onChange={handleNameChange}\n                    required\n                />\n            </Field>\n            <Field>\n                <Icon><FaPhoneAlt size={ 22}/></Icon>\n                <Input\n                    type=\"tel\"\n                    placeholder=\"Number\"\n                    name=\"number\"\n                    value={number}\n                    onChange={handleNumberChange}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                />\n            </Field>\n            <Wrapper>\n                <Icon><FaPlus size={22} /></Icon>\n                <Button type=\"submit\">\n                    {isLoading ? <Spinner size=\"36\" /> : 'Add contact'}\n                </Button>\n            </Wrapper>             \n        </Form>\n    )\n}","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Left = styled.div`\n  margin-right: 24px;\n`;\n\nexport const Number = styled.a`\n  margin-left: 4px;\n  text-decoration: none;\n`;\n\nexport const Button = styled.button`\n\n  margin-left: 8px;\n  cursor: pointer;\n  background-color: ${button => (button.name === 'delete' ? '#bb4343' : '#ecad5a')}; \n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border: transparent;\n  border-radius: 4px;\n  color: #ffffff;\n  opacity: 0.8;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    opacity: 1;\n  }\n`;","import PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from 'redux/contactsAPI';\nimport { useNavigate } from 'react-router-dom';\nimport { Wrapper, Left, Number, Button } from './ContactItem.styled';\nimport { Spinner } from 'components/Spinner';\nimport { FaAddressBook, FaTrashAlt, FaPen } from 'react-icons/fa';\n\n\nexport const ContactItem = ({ id, name, number }) => {   \n    const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n    const navigate = useNavigate();\n\n    return (\n        <Wrapper>\n            <Left>\n                <FaAddressBook /> {name}:\n                <Number href={`tel: ${number}`}>{number}</Number>\n            </Left>  \n            <div>\n                <Button\n                    type=\"button\"\n                    onClick={() => navigate(`/contacts/edit/${id}`)}                              \n                >                \n                    <FaPen />                    \n                </Button>\n                <Button\n                    type=\"button\"\n                    onClick={() => deleteContact(id) }\n                    disabled={isDeleting}\n                    name=\"delete\"\n                >\n                    {isDeleting ? <Spinner size={20}/> :  <FaTrashAlt />}                   \n                </Button>                \n            </div>            \n        </Wrapper>);\n};\n\nContactItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired   \n}","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin: 0 auto;\n  padding-left: 0px;\n  width: max-content;\n  list-style: none;\n  text-align: center;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 8px;\n  font-size: 20px;\n  color: #212121;\n`;\n\nexport const Text = styled.p`\n  font-size: 28px;\n  color: #212121;\n`;","import { useFetchContactsQuery} from 'redux/contactsAPI';\nimport { ContactItem } from 'components/ContactItem';\nimport { Spinner } from 'components/Spinner';\nimport { List, Item, Text } from './ContactList.styled';\n\nexport const ContactList = ({ contacts }) => {  \n    const { isFetching } = useFetchContactsQuery();  \n    \n    return (\n        <List>\n            {isFetching && <Spinner />}\n            {(contacts?.length > 0) ? (contacts.map(contact => (\n                <Item key={contact.id}>\n                    <ContactItem {...contact}/>                    \n                </Item>\n            ))) : (<Text>Contact list is empty</Text>)}\n        </List>\n    )       \n}","import styled from '@emotion/styled';\n\nexport const Form = styled.form` \n  width: 320px;\n  margin: 0 auto;  \n`;\n\nexport const Field = styled.label`\n  display: flex;\n  flex-direction: column;  \n  margin-bottom: 15px;\n`;\n\nexport const Text = styled.span`\n  margin-bottom: 4px;\n  font-size: 20px;\n  color: #212121;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  outline: none;\n  border-radius: 5px;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :focus-within {\n    border: 2px solid dodgerblue;\n  }\n`;","import PropTypes from 'prop-types';\nimport { Form, Field, Input } from './Filter.styled';\n\nexport const Filter = ({ filter, onChange }) => {    \n\n    return (\n        <Form>\n            <Field>                \n                <Input\n                    type=\"text\"\n                    placeholder=\"Find contacts by name\"                \n                    value={filter}\n                    onChange={onChange}                \n                />\n            </Field>\n        </Form>        \n    );\n};\n\nFilter.propTypes = {\n    filter: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};","import { useSelector, useDispatch } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { getFilter, filterContact } from 'redux/filterSlice';\nimport { useFetchContactsQuery } from 'redux/contactsAPI';\nimport { Outlet } from 'react-router-dom';\nimport { Title } from './view.styled';\n\nexport default function ContactsView() {\n  const { data: contacts } = useFetchContactsQuery(); \n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    \n    if (contacts) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter))\n    };\n\n    return;    \n  };\n\n  const changeFilter = e => {\n    dispatch(filterContact(e.target.value));\n  }; \n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <Outlet />\n      <Title>Contacts</Title>\n      {(contacts?.length > 1) && (\n        <Filter filter={filter} onChange={changeFilter} />\n      )}\n      <ContactList contacts={ visibleContacts }/>      \n    </>\n  );\n}","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  height: 100vh;  \n`;\n\nexport const HomeTitle = styled.h1`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 200px;\n  font-weight: 700;\n  font-size: 48px;  \n`;\n\nexport const Title = styled.h2`\n  margin-top: 30px;\n  margin-bottom: 20px;\n  text-align: center;\n  font-weight: 700;\n  font-size: 40px; \n`;\n\nexport const Form = styled.form` \n  width: 320px;\n  margin: 0 auto;  \n`;\n\nexport const Field = styled.label`\n  display: flex;  \n  width: 100%;\n  margin-bottom: 15px;\n`;\n\nexport const Icon = styled.div`\n  padding: 10px;\n  background: dodgerblue;\n  color: white;\n  min-width: 50px;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  outline: none;\n  border-radius: 5px;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :focus-within {\n    border: 2px solid dodgerblue;\n  }\n`;\n\nexport const Button = styled.button`\n  background: dodgerblue;\n  font-weight: 700;\n  font-size: 20px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  color: #ffffff;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 100%;\n  opacity: 0.8;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    opacity: 1;\n  }\n`;"],"names":["Form","styled","Field","Icon","Input","Wrapper","Button","ContactForm","useCreateContactMutation","addNewContact","isLoading","contacts","useFetchContactsQuery","data","useState","name","setName","number","setNumber","onSubmit","e","preventDefault","normalizedName","toLowerCase","find","contact","toast","addContact","autoComplete","size","type","placeholder","value","onChange","target","required","pattern","title","Spinner","Left","Number","button","ContactItem","id","useDeleteContactMutation","deleteContact","isDeleting","navigate","useNavigate","href","onClick","disabled","List","Item","Text","ContactList","isFetching","length","map","Filter","filter","ContactsView","useSelector","getFilter","dispatch","useDispatch","visibleContacts","normalizedFilter","includes","getVisibleContacts","filterContact","Container","HomeTitle","Title"],"sourceRoot":""}